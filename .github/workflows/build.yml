# SPDX-FileCopyrightText: 2023 fosslinux <fosslinux@aussies.space>
# SPDX-FileCopyrightText: 2025 Alexandre Gomes Gaigalas <alganet@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later

name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    name: k0.img
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Add apparmor profile for `wrap`
        run: sudo cp .github/workflows/wrap.apparmor /etc/apparmor.d/wrap && sudo systemctl reload apparmor

      - name: Setup cache for apt packages
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: qemu-system-x86
          version: 1.0

      - name: Setup cache for distfiles
        id: cache-distfiles
        uses: actions/cache@v4
        env:
          cache-name: cache-distfiles
        with:
          path: distfiles
          key: build-${{ env.cache-name }}-${{ hashFiles('distfiles.sh') }}
          restore-keys: |
            build-${{ env.cache-name }}-
            build-

      - name: Fetch distfiles
        run: |
          sh distfiles.sh

      # We need to run this helper after distfiles.sh has downloaded distfiles
      - name: Verify licenses
        run: |
          sh LICENSES/verify.sh

      - name: Build k0.img
        run: |
          QEMU=: sh build.sh

      # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
      - name: Enable KVM for QEMU
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Finally boot it
      - name: Boot k0.img
        run: |
          sh build.sh

      # Remove the created image and verify sha256sum against counter-proof
      - name: Check sha256sum counter-proof
        run: |
          rm build/k0.img
          ! FORCE_FAIL=yes sh build.sh &&
          echo "'FAILED' message here is normal, it means build.sh caught the broken seal"

      - name: Archive k0.img
        uses: actions/upload-artifact@v4
        with:
          name: k0.img
          path: build/k0.img

      - name: Archive k0 files
        uses: actions/upload-artifact@v4
        with:
          name: k0
          path: build/k0
